// Generated by CoffeeScript 1.4.0

/*
Copyright 2013 Adam Mesha <adam@mesha.org>
http://www.mesha.org
https://github.com/sagittarian/jquery-el
Released under the MIT license: http://opensource.org/licenses/MIT

Use like this:

    > $.el()
    [<div></div>]
    > $.el('.myclass.yourclass#uniq', {
      'data-item': 10, 
      text: 'Hello, world!'}).appendEl('a', {
        href: "http://example.com", 
        text: 'Click me!'})
    [<div class="myclass yourclass" id="uniq" data-item="10">
    "Hello, world!"
    <a href="http://example.com">Click me!</a>
    </div>]
*/


(function() {
  var jqel;

  jqel = function($) {
    var attrletters, el, tagletters;
    tagletters = 'a-zA-Z0-9';
    attrletters = tagletters + '_-';
    el = $.el = function(tag, attrs) {
      var $el, attr, classes, cls, id, rest, sigil, signs, split, val, _i, _j, _len, _len1;
      if (tag == null) {
        tag = '';
      }
      if (attrs == null) {
        attrs = {};
      }
      classes = [];
      split = tag.match(RegExp("^([" + tagletters + "]*)(([#.][" + attrletters + "]+)*)$"));
      tag = split[1] ? split[1] : 'div';
      if (split[2] != null) {
        signs = split[2].match(RegExp("([#.][" + attrletters + "]+)", "g"));
        if (signs != null) {
          for (_i = 0, _len = signs.length; _i < _len; _i++) {
            attr = signs[_i];
            sigil = attr.slice(0, 1);
            rest = attr.slice(1);
            if (sigil === '#') {
              id = rest;
            } else {
              classes.push(rest);
            }
          }
        }
      }
      $el = $(document.createElement(tag));
      for (_j = 0, _len1 = classes.length; _j < _len1; _j++) {
        cls = classes[_j];
        $el.addClass(cls);
      }
      if (id != null) {
        $el.attr('id', id);
      }
      for (attr in attrs) {
        val = attrs[attr];
        if (attr === 'text' || attr === 'html' || attr === 'val') {
          $el[attr](val);
        } else {
          $el.attr(attr, val);
        }
      }
      return $el;
    };
    $.fn.el = function(tag, attrs) {
      return el(tag, attrs).appendTo(this);
    };
    $.fn.appendEl = function(tag, attrs) {
      return this.append(el(tag, attrs));
    };
    return el;
  };

  if (typeof define === 'function' && define.amd) {
    define(['jquery'], jqel);
  } else {
    jqel(jQuery);
  }

}).call(this);
